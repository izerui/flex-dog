<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="com.github.izerui.file.components.*"
         creationComplete="loadEnts()">


    <mx:HBox>
        <mx:Label text="企业: "></mx:Label>
        <components:SearchBox id="box" dataProvider="{ents}" itemSelected="itemSelectedHandler(event)" width="200"/>
        <!--<mx:ComboBox id="box" labelField="name" rowCount="20"/>-->
        <mx:Label text="货品: "></mx:Label>
        <mx:TextInput id="input" width="200" enter="page.number = 0; loadData()"/>
        <mx:LinkButton icon="@Embed('/assets/img/bar_img/zoom.png')" label="查询" click="page.number = 0; loadData()"/>
        <mx:LinkButton icon="@Embed('/assets/img/billing.png')" label="推缺" click="linkButton1_clickHandler(event)"/>
    </mx:HBox>
    <mx:DataGrid id="grid" width="100%" height="100%" variableRowHeight="true" dataProvider="{page.content}"
                 itemRollOver="itemRollOver(event)" itemRollOut="itemRollOut(event)" doubleClickEnabled="true"
                 doubleClick="view()">
        <mx:columns>
            <mx:DataGridColumn dataField="index" textAlign="center"
                               headerText="序号"
                               labelFunction="indexNumLabelFun"
                               width="40"/>
            <mx:DataGridColumn dataField="inventoryCode" textAlign="center"
                               headerText="货品编码">
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="inventoryName" width="500" textAlign="center"
                               headerText="货品名称"/>
            <mx:DataGridColumn dataField="unitName" textAlign="center"
                               headerText="单位"/>
            <mx:DataGridColumn dataField="totalDemandQty" textAlign="center"
                               headerText="总需求量">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7"
                                       label="{data.totalDemandQty}"
                                       click="viewLog()">
                            <fx:Script>
                                <![CDATA[
                                import com.github.izerui.file.controls.demand.InventoryDemandLog;

                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewLog():void {
                                    var demandLog:InventoryDemandLog = new InventoryDemandLog();
                                    demandLog.inventory = data;
                                    demandLog.setFocus();

                                    PopUpManager.addPopUp(demandLog, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(demandLog);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="totalPurgeQty" textAlign="center"
                               headerText="总在途在制量">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7"
                                       label="{data.totalPurgeQty}"
                                       click="viewLog()">
                            <fx:Script>
                                <![CDATA[
                                import com.github.izerui.file.controls.demand.InventoryDemandLog;

                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewLog():void {
                                    var demandLog:InventoryDemandLog = new InventoryDemandLog();
                                    demandLog.inventory = data;
                                    demandLog.setFocus();

                                    PopUpManager.addPopUp(demandLog, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(demandLog);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="stockQty" textAlign="center"
                               headerText="库存量">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7"
                                       label="{data.stockQty}"
                                       click="viewStock()">
                            <fx:Script>
                                <![CDATA[
                                import com.github.izerui.file.controls.demand.InventoryStockLog;

                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewStock():void {
                                    var demandLog:InventoryStockLog = new InventoryStockLog();
                                    demandLog.inventory = data;
                                    demandLog.setFocus();

                                    PopUpManager.addPopUp(demandLog, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(demandLog);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="usableQty" textAlign="center"
                               headerText="可用量">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7"
                                       label="{data.usableQty}"
                                       click="viewDemand()">
                            <fx:Script>
                                <![CDATA[
                                import com.github.izerui.file.controls.demand.InventoryOrderDemand;

                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewDemand():void {
                                    var orderDemand:InventoryOrderDemand = new InventoryOrderDemand();
                                    orderDemand.inventory = data;
                                    orderDemand.setFocus();

                                    PopUpManager.addPopUp(orderDemand, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(orderDemand);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
        </mx:columns>
    </mx:DataGrid>
    <mx:ControlBar width="100%">
        <mx:LinkBar id="linkButtonBar" iconField="ico" horizontalAlign="right" itemClick="pageClick(event)">
            <mx:dataProvider>
                <s:ArrayCollection>
                    <fx:Object label="首页" itemData="0" ico="@Embed('/assets/img/bar_img/resultset_first.png')"/>
                    <fx:Object label="上一页" itemData="1" ico="@Embed('/assets/img/bar_img/resultset_previous.png')"/>
                    <fx:Object label="下一页" itemData="2" ico="@Embed('/assets/img/bar_img/resultset_next.png')"/>
                    <fx:Object label="末页" itemData="3" ico="@Embed('/assets/img/bar_img/resultset_last.png')"/>
                </s:ArrayCollection>
            </mx:dataProvider>
        </mx:LinkBar>
        <mx:Label text="{page.number + 1} / {page.totalPages} 页"/>
        <mx:Label text="共 {page.totalElements} 条记录"/>
    </mx:ControlBar>
    <fx:Script><![CDATA[
        import com.github.izerui.file.components.SearchBoxEvent;
        import com.github.izerui.file.controls.titlewin.DetailTitleWindow;
        import com.github.izerui.file.controls.titlewin.UserWindow;
        import com.github.izerui.file.event.SelUserEvent;
        import com.github.izerui.file.utils.RemoteObjectUtils;

        import mx.controls.Alert;

        import mx.core.FlexGlobals;
        import mx.events.ItemClickEvent;
        import mx.events.ListEvent;
        import mx.formatters.DateFormatter;
        import mx.managers.PopUpManager;
        import mx.rpc.events.ResultEvent;

        [Bindable]
        protected var page:Object = {
            number: 0,
            size: 50,
            totalPages: 0,
            totalElements: 0,
            content: []
        };

        [Bindable]
        protected var ents:ArrayCollection;

        [Bindable]
        private var entCode:String;
        [Bindable]
        private var entName:String = '';

        private function loadEnts():void {
            RemoteObjectUtils.execute("demandService", "getEntList", function (event:ResultEvent) {
                ents = event.result as ArrayCollection;
            });
        }

        private function loadData():void {
            if (entCode) {
                RemoteObjectUtils.execute("demandService", "inventoryDemands", function (event:ResultEvent) {
                    page = event.result;
                }, entCode, page.number, page.size, input.text)
            }
        }

        private function dateLabelFun(item:Object, column:DataGridColumn):String {
            var df:DateFormatter = new DateFormatter();
            df.formatString = "YYYY-MM-DD";
            return df.format(item.date);
        }

        private function pageClick(event:ItemClickEvent):void {
            switch (event.item["itemData"]) {
                case 0: {
                    page.number = 0;
                    break;
                }
                case 1: {
                    page.number--;
                    break;
                }
                case 2: {
                    page.number++;
                    break;
                }
                case 3: {
                    page.number = page.totalPages - 1;
                    break;
                }
            }
            if (page.number == page.totalPages) {
                page.number = page.totalPages - 1;
            }
            if (page.number < 0) {
                page.number = 0;
            }
            loadData();
        }

        private function view():void {
            if (grid.selectedIndex == -1) {
                return;
            }
            var popUp:DetailTitleWindow = new DetailTitleWindow();
            popUp.output = JSON.stringify(grid.selectedItem, null, "  ");
            popUp.setFocus();
            PopUpManager.addPopUp(popUp, FlexGlobals.topLevelApplication as DisplayObjectContainer, true)
            PopUpManager.centerPopUp(popUp)
//            var copyText:String = JSON.stringify(grid.selectedItem);
//            System.setClipboard(copyText);
        }

        private function indexNumLabelFun(item:Object, column:DataGridColumn):String {
            var indexNum:int = (page.content.getItemIndex(item) + 1);
            return indexNum.toString();
        }

        private function itemRollOver(event:ListEvent):void {
        }

        private function itemRollOut(event:ListEvent):void {
        }

        private function itemSelectedHandler(event:SearchBoxEvent):void {
            entCode = event.item.code;
            entName = event.item.name;
        }

        private function linkButton1_clickHandler(event:MouseEvent):void {
            if(grid.selectedIndex == -1){
                return;
            }
            var item:Object = grid.selectedItem;
            var userWin:UserWindow = new UserWindow();
            userWin.entCode = item.entCode as String;
            userWin.addEventListener("selUserEvent",function (ev:SelUserEvent) {
                var userCode:String = ev.user.code as String;
                RemoteObjectUtils.execute("demandService", "lackMaterial", function (event:ResultEvent) {
                    Alert.show("操作成功",'提示');
                }, entCode, userCode, grid.selectedItem.inventoryId);
            });
            userWin.setFocus();
            PopUpManager.addPopUp(userWin, FlexGlobals.topLevelApplication as DisplayObjectContainer, true)
            PopUpManager.centerPopUp(userWin)
        }
        ]]>
    </fx:Script>
</mx:VBox>
