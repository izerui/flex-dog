<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         creationComplete="loadEnts()">


    <mx:HBox>
        <mx:ComboBox id="box" labelField="name" rowCount="20"/>
        <mx:TextInput id="input" width="200" enter="page.number = 0; loadData()"/>
        <mx:LinkButton icon="@Embed('/assets/img/bar_img/zoom.png')" label="查询" click="page.number = 0; loadData()"/>
    </mx:HBox>
    <mx:AdvancedDataGrid id="grid" width="100%" height="100%" variableRowHeight="true" doubleClickEnabled="true"
                 doubleClick="view()">

        <mx:dataProvider>
            <mx:HierarchicalData source="{page.content}"/>
        </mx:dataProvider>

        <mx:columns>
            <mx:AdvancedDataGridColumn dataField="businessDocNo" headerText="订单号"/>
            <mx:AdvancedDataGridColumn dataField="inventoryCode" headerText="物料编码"/>
            <mx:AdvancedDataGridColumn dataField="inventoryName" headerText="物料名称"/>
            <mx:AdvancedDataGridColumn dataField="attributeCode" headerText="属性"/>
            <mx:AdvancedDataGridColumn dataField="unitName" headerText="单位"/>
            <mx:AdvancedDataGridColumn dataField="remark" headerText="动作"/>
            <mx:AdvancedDataGridColumn dataField="changeDemandQty" headerText="需求改变"/>
            <mx:AdvancedDataGridColumn dataField="demandQty" headerText="需求量"/>
            <mx:AdvancedDataGridColumn dataField="changePurgeQty" headerText="净需改变"/>
            <mx:AdvancedDataGridColumn dataField="purgeQty" headerText="净需量"/>
            <mx:AdvancedDataGridColumn dataField="realPurgeQty" headerText="在途在制量"/>
            <mx:AdvancedDataGridColumn dataField="time" headerText="时间"/>
            <mx:AdvancedDataGridColumn dataField="checked" headerText="注意"/>
        </mx:columns>

    </mx:AdvancedDataGrid>
    <mx:ControlBar width="100%">
        <mx:LinkBar id="linkButtonBar" iconField="ico" horizontalAlign="right" itemClick="pageClick(event)">
            <mx:dataProvider>
                <s:ArrayCollection>
                    <fx:Object label="首页" itemData="0" ico="@Embed('/assets/img/bar_img/resultset_first.png')"/>
                    <fx:Object label="上一页" itemData="1" ico="@Embed('/assets/img/bar_img/resultset_previous.png')"/>
                    <fx:Object label="下一页" itemData="2" ico="@Embed('/assets/img/bar_img/resultset_next.png')"/>
                    <fx:Object label="末页" itemData="3" ico="@Embed('/assets/img/bar_img/resultset_last.png')"/>
                </s:ArrayCollection>
            </mx:dataProvider>
        </mx:LinkBar>
        <mx:Label text="{page.number + 1} / {page.totalPages} 页"/>
        <mx:Label text="共 {page.totalElements} 条记录"/>
    </mx:ControlBar>
    <fx:Script><![CDATA[
        import com.github.izerui.file.controls.titlewin.DetailTitleWindow;
        import com.github.izerui.file.utils.RemoteObjectUtils;

        import mx.core.FlexGlobals;
        import mx.events.ItemClickEvent;
        import mx.events.ListEvent;
        import mx.formatters.DateFormatter;
        import mx.managers.PopUpManager;
        import mx.rpc.events.ResultEvent;

        [Bindable]
        protected var page:Object = {
            number: 0,
            size: 50,
            totalPages: 0,
            totalElements: 0,
            content: []
        };

        private function loadEnts():void {
            RemoteObjectUtils.execute("demandService", "getEntList", function (event:ResultEvent) {
                box.dataProvider = event.result;
            });

        }

        private function loadData():void {
            RemoteObjectUtils.execute("demandService", "findErrorDemandInventories", function (event:ResultEvent) {
                page = event.result;
            }, box.selectedItem.code, page.number, page.size, input.text)

        }

        private function dateLabelFun(item:Object, column:AdvancedDataGridColumn):String {
            var df:DateFormatter = new DateFormatter();
            df.formatString = "YYYY-MM-DD";
            return df.format(item.date);
        }

        private function pageClick(event:ItemClickEvent):void {
            switch (event.item["itemData"]) {
                case 0: {
                    page.number = 0;
                    break;
                }
                case 1: {
                    page.number--;
                    break;
                }
                case 2: {
                    page.number++;
                    break;
                }
                case 3: {
                    page.number = page.totalPages - 1;
                    break;
                }
            }
            if (page.number == page.totalPages) {
                page.number = page.totalPages - 1;
            }
            if (page.number < 0) {
                page.number = 0;
            }
            loadData();
        }

        private function view():void {
            if (grid.selectedIndex == -1) {
                return;
            }
            var popUp:DetailTitleWindow = new DetailTitleWindow();
            popUp.output = JSON.stringify(grid.selectedItem, null, "  ");
            popUp.setFocus();
            PopUpManager.addPopUp(popUp, FlexGlobals.topLevelApplication as DisplayObjectContainer, true)
            PopUpManager.centerPopUp(popUp)
//            var copyText:String = JSON.stringify(grid.selectedItem);
//            System.setClipboard(copyText);
        }

        private function indexNumLabelFun(item:Object, column:AdvancedDataGridColumn):String {
            var indexNum:int = (page.content.getItemIndex(item) + 1);
            return indexNum.toString();
        }

        ]]>
    </fx:Script>
</mx:VBox>
