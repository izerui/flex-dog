<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="com.github.izerui.file.components.*"
         creationComplete="loadEnts()">

    <mx:HBox>
        <mx:Label text="企业: "></mx:Label>
        <components:SearchBox id="box" dataProvider="{ents}" itemSelected="itemSelectedHandler(event)" width="200"/>
        <!--<mx:ComboBox id="box" labelField="name" rowCount="20"/>-->
        <mx:LinkButton icon="@Embed('/assets/img/bar_img/zoom.png')" label="查询" click="loadData()"/>
        <mx:LinkButton icon="@Embed('/assets/img/renameFolder.png')" label="手动修改" click="update()"/>
        <mx:Label text="{dataList.length} 条记录"/>
    </mx:HBox>
    <mx:DataGrid id="grid" width="100%" height="100%" variableRowHeight="true" doubleClickEnabled="true"
                 dataProvider="{dataList}"
                 doubleClick="view()">

        <mx:columns>
            <mx:DataGridColumn dataField="index" textAlign="center"
                               headerText="序号"
                               labelFunction="indexNumLabelFun"
                               width="40"/>
            <mx:DataGridColumn dataField="businessKey" textAlign="center"
                               headerText="进程">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7" label="{data.businessKey}"
                                       click="viewBusiness()">
                            <fx:Script>
                                <![CDATA[
                                import com.github.izerui.file.controls.demand.BusinessDemandLog;

                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewBusiness():void {
                                    var demandLog:BusinessDemandLog = new BusinessDemandLog();
                                    demandLog.selItem = data;
                                    demandLog.setFocus();

                                    PopUpManager.addPopUp(demandLog, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(demandLog);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="inventoryCode" textAlign="center"
                               headerText="货品编码">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7"
                                       label="{data.inventoryCode}"
                                       click="viewDemand()">
                            <fx:Script>
                                <![CDATA[
                                import com.github.izerui.file.controls.demand.InventoryOrderDemand;

                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewDemand():void {
                                    var orderDemand:InventoryOrderDemand = new InventoryOrderDemand();
                                    orderDemand.inventory = data;
                                    orderDemand.setFocus();

                                    PopUpManager.addPopUp(orderDemand, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(orderDemand);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="inventoryName" headerText="物料名称"/>
            <mx:DataGridColumn dataField="attributeName" headerText="属性"/>
            <mx:DataGridColumn dataField="demandQty" headerText="需求"/>
            <mx:DataGridColumn dataField="purgeQty" headerText="净需">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7"
                                       label="{data.purgeQty}"
                                       click="viewLog()">
                            <fx:Script>
                                <![CDATA[
                                import com.github.izerui.file.controls.demand.InventoryDemandLog;

                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewLog():void {
                                    var demandLog:InventoryDemandLog = new InventoryDemandLog();
                                    demandLog.inventory = data;
                                    demandLog.setFocus();

                                    PopUpManager.addPopUp(demandLog, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(demandLog);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="realPurgeQty" headerText="实际净需"/>
        </mx:columns>
    </mx:DataGrid>
    <fx:Script><![CDATA[
        import com.github.izerui.file.components.SearchBoxEvent;
        import com.github.izerui.file.controls.demand.UpdateDemandWindow;
        import com.github.izerui.file.controls.titlewin.DetailTitleWindow;
        import com.github.izerui.file.utils.RemoteObjectUtils;

        import mx.collections.ArrayCollection;
        import mx.core.FlexGlobals;
        import mx.formatters.DateFormatter;
        import mx.managers.PopUpManager;
        import mx.rpc.events.ResultEvent;

        [Bindable]
        protected var dataList:ArrayCollection;

        [Bindable]
        protected var ents:ArrayCollection;

        [Bindable]
        private var entCode:String;
        [Bindable]
        private var entName:String = '';

        private function loadEnts():void {
            RemoteObjectUtils.execute("demandService", "getEntList", function (event:ResultEvent) {
                ents = event.result as ArrayCollection;
            });

        }

        private function loadData():void {
            if (entCode) {
                RemoteObjectUtils.execute("demandService", "findErrorDemandInventories", function (event:ResultEvent) {
                    dataList = event.result as ArrayCollection;
                }, entCode)
            }

        }

        private function dateLabelFun(item:Object, column:DataGridColumn):String {
            var df:DateFormatter = new DateFormatter();
            df.formatString = "YYYY-MM-DD";
            return df.format(item.date);
        }

        private function view():void {
            if (grid.selectedIndex == -1) {
                return;
            }
            var popUp:DetailTitleWindow = new DetailTitleWindow();
            popUp.output = JSON.stringify(grid.selectedItem, null, "  ");
            popUp.setFocus();
            PopUpManager.addPopUp(popUp, FlexGlobals.topLevelApplication as DisplayObjectContainer, true)
            PopUpManager.centerPopUp(popUp)
//            var copyText:String = JSON.stringify(grid.selectedItem);
//            System.setClipboard(copyText);
        }

        private function indexNumLabelFun(item:Object, column:DataGridColumn):String {
            var indexNum:int = (dataList.getItemIndex(item) + 1);
            return indexNum.toString();
        }

        private function update():void {
            if (grid.selectedIndex == -1) {
                return;
            }
            var udw:UpdateDemandWindow = new UpdateDemandWindow();
            udw.demandItem = grid.selectedItem;
            udw.setFocus();
//            udw.addEventListener("DataChange", function (event:Event) {
//                loadData();
//            });
            PopUpManager.addPopUp(udw, DisplayObject(FlexGlobals.topLevelApplication), true);
            PopUpManager.centerPopUp(udw);
        }

        private function itemSelectedHandler(event:SearchBoxEvent):void {
            entCode = event.item.code;
            entName = event.item.name;
        }
        ]]>
    </fx:Script>
</mx:VBox>
