<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx"
                xmlns:components="com.github.izerui.file.components.*"
                layout="vertical"
                creationComplete="loadData()"
                showCloseButton="true"
                width="{this.parentApplication.width - 100}"
                height="{this.parentApplication.height - 100}"
                close="PopUpManager.removePopUp(this);"
                title="货品: {inventory.inventoryCode} {inventory.inventoryName} 的需求"
                keyDown="if(event.charCode == Keyboard.ESCAPE) PopUpManager.removePopUp(this);">

    <mx:DataGrid id="grid" width="100%" height="100%" variableRowHeight="true" dataProvider="{results}"
                 doubleClickEnabled="true" itemDoubleClick="view()">
        <mx:columns>
            <mx:DataGridColumn dataField="index" textAlign="center"
                               headerText="序号"
                               labelFunction="indexNumLabelFun"
                               width="40"/>
            <mx:DataGridColumn dataField="businessKey" width="260" textAlign="center"
                               headerText="进程">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7" label="{data.businessKey}"
                                       click="viewBusiness()">
                            <fx:Script>
                                <![CDATA[
                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewBusiness():void {
                                    var demandLog:BusinessDemandLog = new BusinessDemandLog();
                                    demandLog.selItem = data;
                                    demandLog.setFocus();

                                    PopUpManager.addPopUp(demandLog, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(demandLog);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="businessDocNo" textAlign="center"
                               headerText="订单号"/>
            <mx:DataGridColumn dataField="businessTypeName" textAlign="center"
                               headerText="订单类型"/>
            <mx:DataGridColumn dataField="attributeName" textAlign="center"
                               headerText="货品属性"/>
            <mx:DataGridColumn dataField="unitName" textAlign="center"
                               headerText="单位"/>
            <mx:DataGridColumn dataField="demandQty" textAlign="center"
                               headerText="需求量">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7"
                                       label="{data.demandQty}"
                                       click="viewLog()">
                            <fx:Script>
                                <![CDATA[
                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewLog():void {
                                    var demandLog:InventoryDemandLog = new InventoryDemandLog();
                                    demandLog.inventory = data;
                                    demandLog.setFocus();

                                    PopUpManager.addPopUp(demandLog, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(demandLog);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="purgeQty" textAlign="center"
                               headerText="在途在制量">
                <mx:itemRenderer>
                    <fx:Component>
                        <mx:LinkButton buttonMode="true" useHandCursor="true" color="#6c7dc7"
                                       label="{data.purgeQty}"
                                       click="viewLog()">
                            <fx:Script>
                                <![CDATA[
                                import mx.core.Application;
                                import mx.managers.PopUpManager;

                                private function viewLog():void {
                                    var demandLog:InventoryDemandLog = new InventoryDemandLog();
                                    demandLog.inventory = data;
                                    demandLog.setFocus();

                                    PopUpManager.addPopUp(demandLog, Application.application as DisplayObject, true);
                                    PopUpManager.centerPopUp(demandLog);
                                }
                                ]]>
                            </fx:Script>
                        </mx:LinkButton>
                    </fx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn dataField="createTime" textAlign="center"
                               labelFunction="dateLabelFun" width="130"
                               headerText="创建时间"/>
            <mx:DataGridColumn dataField="updateTime" textAlign="center"
                               labelFunction="dateLabelFun2"
                               headerText="更新时间"/>
        </mx:columns>
    </mx:DataGrid>
    <mx:ControlBar>
        <mx:Label text="按订单搜索:"/>
        <components:SearchInput id="searchKey" width="200" textChange="filterResult()"/>
        <mx:LinkButton icon="@Embed('/assets/img/renameFolder.png')" label="手动修改" click="update()"/>
    </mx:ControlBar>
    <fx:Script><![CDATA[
        import com.github.izerui.file.controls.titlewin.DetailTitleWindow;
        import com.github.izerui.file.utils.RemoteObjectUtils;

        import mx.collections.ArrayCollection;
        import mx.core.FlexGlobals;
        import mx.formatters.DateFormatter;
        import mx.managers.PopUpManager;
        import mx.rpc.events.ResultEvent;
        import mx.utils.ObjectUtil;

        [Bindable]
        public var inventory:Object;

        [Bindable]
        protected var results:ArrayCollection;

        private function loadData():void {
            RemoteObjectUtils.execute("demandService", "inventoryBusinessDemands", function (event:ResultEvent) {
                results = event.result as ArrayCollection;
                filterResult();
            }, inventory.entCode, inventory.inventoryId)

        }

        private function dateLabelFun(item:Object, column:DataGridColumn):String {
            var df:DateFormatter = new DateFormatter();
            df.formatString = "YYYY-MM-DD JJ:NN:SS";
            return df.format(item.createTime);
        }

        private function dateLabelFun2(item:Object, column:DataGridColumn):String {
            var df:DateFormatter = new DateFormatter();
            df.formatString = "YYYY-MM-DD JJ:NN:SS";
            return df.format(item.updateTime);
        }

        private function view():void {
            if (grid.selectedIndex == -1) {
                return;
            }
            var popUp:DetailTitleWindow = new DetailTitleWindow();
            popUp.output = JSON.stringify(grid.selectedItem, null, "  ");
            popUp.setFocus();
            PopUpManager.addPopUp(popUp, FlexGlobals.topLevelApplication as DisplayObjectContainer, true)
            PopUpManager.centerPopUp(popUp)
//            var copyText:String = JSON.stringify(grid.selectedItem);
//            System.setClipboard(copyText);
        }

        private function indexNumLabelFun(item:Object, column:DataGridColumn):String {
            var indexNum:int = (results.getItemIndex(item) + 1);
            return indexNum.toString();
        }

        private function update():void {
            if (grid.selectedIndex == -1) {
                return;
            }
            var udw:UpdateDemandWindow = new UpdateDemandWindow();
            udw.demandItem = grid.selectedItem;
            udw.setFocus();
            udw.addEventListener("DataChange", function (event:Event) {
                loadData();
            });
            PopUpManager.addPopUp(udw, DisplayObject(FlexGlobals.topLevelApplication), true);
            PopUpManager.centerPopUp(udw);
        }

        private function filterResult():void {
            if (!searchKey.text) {
                grid.dataProvider = results;
                return;
            }
            var tempSearchList:ArrayCollection = new ArrayCollection;

            for each (var fi:Object in results) {
                if (fi.businessKey.indexOf(searchKey.text) != -1 || fi.businessDocNo.indexOf(searchKey.text) != -1) {
                    tempSearchList.addItem(ObjectUtil.clone(fi));
                }
            }
            grid.dataProvider = tempSearchList;
        }
        ]]>
    </fx:Script>
</mx:TitleWindow>
